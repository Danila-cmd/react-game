{"version":3,"sources":["components/Sound/createGamerButton.mp3","components/Sound/backToMenu.mp3","components/CreateGamer.js","components/Game/componentsForGame/style/StyledCell.js","components/Game/tetrisFigure.js","components/Game/componentsForGame/Cell.js","components/Game/componentsForGame/style/StyledStage.js","components/Game/componentsForGame/Stage.js","components/Game/componentsForGame/style/StyledDisplay.js","components/Game/componentsForGame/Display.js","components/Game/componentsForGame/style/StyledStartButton.js","components/Game/componentsForGame/StartButton.js","components/Game/img/bg.png","components/Game/componentsForGame/style/StyledTetris.js","components/Game/gameHelpers.js","components/Game/hooks/useStage.js","components/Game/componentsForGame/Tetris.js","components/Game/hooks/usePlayer.js","components/Game/hooks/useGameStatus.js","components/Game/hooks/useInterval.js","components/Game/MyModal.js","components/Game/Header.js","components/Game/Footer.js","components/Game/Game.js","components/Sound/bum.mp3","components/MainMenu.js","App.js","routes.js","index.js"],"names":["CreateGamer","useState","name","setName","email","setEmail","useSound","sound","createGamer","backSound","backToMenu","className","onSubmit","event","preventDefault","gamer","axios","post","then","response","console","log","data","localStorage","setItem","type","placeholder","value","onChange","e","target","onClick","to","StyledCell","styled","div","props","color","TETROMINOS","0","shape","I","J","L","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","length","Cell","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","x","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","id","StyledTetrisWrapper","bgImage","StyledTetris","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","useStage","resetPlayer","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","scoreForBackEnd","setScoreForBackEnd","movePlayer","blockScroll","document","body","style","overflow","drop","setGameOverScore","getItem","move","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","getGamer","nameGamer","get","catch","onKeyUp","role","tabIndex","onKeyDown","activeClass","spy","smooth","duration","MyModal","modalIsOpen","setModalIsOpen","gamers","setGamers","getAllGamer","gamersFromBack","Button","variant","onRequestClose","isOpen","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Form","inline","Footer","href","src","alt","Date","getFullYear","Game","MainMenu","play","disabled","App","routes","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.545e54fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/createGamerButton.9d5a87b4.mp3\";","export default __webpack_public_path__ + \"static/media/backToMenu.a56732dd.mp3\";","import React, {useState} from 'react'\nimport axios from \"axios\";\nimport \"./CreateGamer.css\"\nimport {Link} from \"react-router-dom\";\n\nimport useSound from \"use-sound\";\nimport sound from \"./Sound/createGamerButton.mp3\"\nimport backSound from \"./Sound/backToMenu.mp3\"\n\nconst CreateGamer = () => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n\n    const [createGamer] = useSound(sound)\n    const [backToMenu] = useSound(backSound)\n\n    const changeName = (e) => {\n        setName(e.target.value)\n        e.preventDefault()\n    }\n\n    const changeEmail = (e) => {\n\n        setEmail(e.target.value)\n\n        e.preventDefault()\n    }\n\n    const handleSubmit = (event) => {\n\n        event.preventDefault()\n\n        const gamer = {\n            name,\n            email\n        }\n\n        axios.post('https://backforgame.herokuapp.com/app/signup', gamer)\n            .then(response => console.log(response.data))\n\n        setName('')\n        setEmail('')\n\n        localStorage.setItem(\"gamer\", name);\n\n    }\n\n    return (\n        <div className=\"createGamer\">\n            <div className=\"row\">\n                <div className='col s4 offset-s3'>\n                    <form onSubmit={handleSubmit}>\n                        <input type=\"text\"\n                               placeholder=\"Введите имя игрока\"\n                               value={name}\n                               onChange={changeName}\n                               className='form-control form-group'/>\n\n                        <input type=\"text\"\n                               placeholder=\"Введите почту\"\n                               value={email}\n                               onChange={changeEmail}\n                               className='form-control form-group'/>\n\n                        <input type=\"submit\" className='btn btn-danger btn-block mb-2'\n                               onClick={createGamer}\n                               value='Создать игрока'/>\n\n                        <Link to=\"/\"\n                              onClick={backToMenu}\n                              className=\"btn btn-primary btn-block\">\n                            Назад\n                        </Link>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateGamer","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","export const TETROMINOS = {\n    0: {shape: [[0]], color: '0,0,0'},\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n        ],\n        color: '80, 227,230',\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0],\n        ],\n        color: '36, 95, 223',\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L'],\n        ],\n        color: '223, 173, 36',\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0],\n        ],\n        color: '48, 211, 56',\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0],\n        ],\n        color: '132, 61, 198',\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0],\n        ],\n        color: '227, 78, 78',\n    },\n}\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLSTZ';\n    const randTetromino =\n        tetrominos[Math.floor(Math.random() * tetrominos.length)]\n    return TETROMINOS[randTetromino]\n\n}","import React from \"react\";\nimport {StyledCell} from \"./style/StyledCell\";\nimport {TETROMINOS} from \"../tetrisFigure.js\";\n\nconst Cell = ({type}) => {\n    return (\n        <StyledCell type={type} color={TETROMINOS[type].color}/>\n    )\n}\n\nexport default React.memo(Cell)","import styled from 'styled-components'\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(${props => props.height},\n  calc(25vw / ${props => props.width}));\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 1px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import React from \"react\";\nimport Cell from \"./Cell\";\nimport {StyledStage} from './style/StyledStage'\n\nconst Stage = ({stage}) => {\n    return (\n        <StyledStage width={stage[0].length} height={stage.length}>\n            {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]}/>))}\n        </StyledStage>\n    )\n}\n\nexport default Stage","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from \"react\";\nimport {StyledDisplay} from \"./style/StyledDisplay\";\n\nconst Display = ({gameOver, text}) => {\n    return (\n        <StyledDisplay gameOver={gameOver}>\n            {text}\n        </StyledDisplay>\n    )\n}\n\nexport default Display\n\n","import styled from 'styled-components'\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;","import React from \"react\"\nimport {StyledStartButton} from \"./style/StyledStartButton\";\n\nconst StartButton = ({callback}) => {\n    return (\n        <StyledStartButton\n            id=\"main\"\n            onClick={callback}>\n            Start Game\n        </StyledStartButton>\n    )\n}\n\nexport default StartButton","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components'\n\nimport bgImage from '../../img/bg.png'\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n\n`","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n\nexport const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n            if (player.tetromino[y][x] !== 0) {\n                if (\n                    !stage[y + player.pos.y + moveY] ||\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n}","import {useState, useEffect} from 'react';\nimport {createStage} from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage =>\n            newStage.reduce((ack, row) => {\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\n                    setRowsCleared(prev => prev + 1);\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return ack;\n                }\n                ack.push(row);\n                return ack;\n            }, [])\n\n        const updateStage = prevStage => {\n            // First flush the stage\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n            );\n\n            // Then draw the tetromino\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`,\n                        ];\n                    }\n                });\n            });\n            // Then check if we collided\n            if (player.collided) {\n                resetPlayer();\n                return sweepRows(newStage);\n            }\n            return newStage;\n        };\n\n        setStage(prev => updateStage(prev));\n    }, [player, resetPlayer]);\n\n    return [stage, setStage, rowsCleared];\n};","import React, {useState} from \"react\";\nimport Stage from './Stage';\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport {StyledTetris, StyledTetrisWrapper} from \"./style/StyledTetris\";\n\nimport {createStage, checkCollision} from \"../gameHelpers\";\n\nimport {useInterval} from \"../hooks/useInterval\";\nimport {usePlayer} from \"../hooks/usePlayer\";\nimport {useStage} from \"../hooks/useStage\";\nimport {useGameStatus} from \"../hooks/useGameStatus\";\nimport axios from \"axios\";\n\nimport {Link} from \"react-scroll\"\n\nconst Tetris = () => {\n\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared)\n    const [scoreForBackEnd, setScoreForBackEnd] = useState(0)\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, {x: dir, y: 0})) {\n            updatePlayerPos({x: dir, y: 0})\n        }\n    }\n\n    const startGame = () => {\n        setStage(createStage())\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false)\n        setScore(0)\n        setRows(0)\n        setLevel(0)\n        getGamer()\n        blockScroll()\n    }\n\n    const blockScroll = () => {\n        document.body.style.overflow = \"hidden\"\n    }\n\n    const unblockScroll = () => {\n        document.body.style.overflow = \"\"\n    }\n\n    const drop = () => {\n\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200)\n        }\n\n        if (!checkCollision(player, stage, {x: 0, y: 1})) {\n            updatePlayerPos({x: 0, y: 1, collided: false})\n        } else {\n            if (player.pos.y < 1) {\n\n                unblockScroll()\n\n                const name = localStorage.getItem(\"gamer\");\n\n                const setGameOverScore = {\n                    name,\n                    score: scoreForBackEnd + score\n                }\n\n                axios.post(\"https://backforgame.herokuapp.com/app/addScore\", setGameOverScore)\n                    .then()\n\n                setGameOver(true);\n                setDropTime(null);\n\n            }\n            updatePlayerPos({x: 0, y: 0, collided: true})\n        }\n    }\n\n    const keyUp = ({keyCode}) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000)\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null)\n        drop()\n    }\n\n    const move = ({keyCode}) => {\n\n        if (!gameOver) {\n            if (keyCode === 37) {         // leftkey\n                movePlayer(-1);\n            } else if (keyCode === 39) {  // rightkey\n                movePlayer(1)\n            } else if (keyCode === 40) {  // downkey\n                dropPlayer()\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1)\n            }\n        }\n\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    const getGamer = () => {\n\n        const nameGamer = localStorage.getItem(\"gamer\")\n\n        axios.get(`https://backforgame.herokuapp.com/app/getScore${nameGamer}`)\n            .then((response) => {\n                    const data = response.data.map(\n                        map => {\n                            setScoreForBackEnd(map.score)\n                        })\n                }\n            )\n            .catch(() => {\n                console.log('Some error')\n            })\n    }\n\n    return (\n        <StyledTetrisWrapper onKeyUp={keyUp} role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\n            <StyledTetris>\n                <Stage stage={stage}/>\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\"/>\n                    ) : (\n                        <div>\n                            <Display text={`Score: ${score}`}/>\n                            <Display text={`Rows: ${rows}`}/>\n                            <Display text={`Level: ${level}`}/>\n                        </div>\n                    )}\n                    <Link\n                        activeClass=\"active\"\n                        to='main'\n                        spy={true}\n                        smooth={-70}\n                        duration={500}\n                    >\n                        <StartButton callback={startGame}/>\n                    </Link>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris","import {useState, useCallback} from 'react'\nimport {TETROMINOS, randomTetromino} from \"../tetrisFigure\"\nimport {checkCollision, STAGE_WIDTH} from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: {x: 0, y: 0},\n        tetromino: TETROMINOS[0].shape,\n        collided: false\n    });\n\n    const rotate = (matrix, dir) => {\n\n        const rotatedTetro = matrix.map((_, index) =>\n            matrix.map(col => col[index]),\n        );\n\n        if (dir > 0) return rotatedTetro.map(row => row.reverse());\n\n        return rotatedTetro.reverse();\n\n    }\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player))\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n\n        while (checkCollision(clonedPlayer, stage, {x: 0, y: 0})) {\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1))\n            if (offset > clonedPlayer.tetromino[0].length) {\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer)\n\n    }\n\n    const updatePlayerPos = ({x, y, collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: {x: STAGE_WIDTH / 2 - 2, y: 0},\n            tetromino: randomTetromino().shape,\n            collided: false,\n        })\n    }, [])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}\n","import {useState, useEffect, useCallback} from 'react'\n\nexport const useGameStatus = rowsCleared => {\n\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\n            setRows(prev => prev + rowsCleared)\n        }\n    }, [level, linePoints, rowsCleared])\n\n    useEffect(() => {\n        calcScore()\n    }, [calcScore, rowsCleared, score])\n\n    return [score, setScore, rows, setRows, level, setLevel]\n\n}","import {useEffect, useRef} from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => {\n                clearInterval(id);\n            };\n        }\n    }, [delay]);\n}","import React, {useEffect, useState} from \"react\";\nimport Modal from \"react-modal\";\nimport {Button} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst MyModal = () => {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [gamers, setGamers] = useState([])\n\n    const getAllGamer = () => {\n        axios.get(\"https://backforgame.herokuapp.com/app/getAllGamer\")\n            .then((response) => {\n                const gamersFromBack = response.data\n                setGamers(gamersFromBack)\n            })\n    }\n\n    const mapUser = () => {\n        gamers.map(gamer => console.log(gamer.score))\n    }\n\n    useEffect(() => {\n        getAllGamer()\n        mapUser()\n    }, [getAllGamer])\n\n    return (\n        <div>\n\n            <Button onClick={() => setModalIsOpen(true)} variant=\"outline-success\">Cтатистика</Button>\n\n            <Modal onRequestClose={() => setModalIsOpen(false)} isOpen={modalIsOpen}>\n                <h2>Статистика</h2>\n\n                <div>\n                    {gamers.length > 0 ? (\n                        <>\n                            {gamers.map(gamer => (\n                                <div>\n                                    <div>{gamer.name} : {gamer.score}</div>\n                                </div>\n                            ))}\n                        </>\n\n                    ) : (\n                        <h3>Игроки отсутствуют</h3>\n                    )}\n                </div>\n\n            </Modal>\n        </div>\n    )\n}\n\nexport default MyModal","import React, {useState} from 'react'\nimport {Navbar, Button, Form, Nav} from \"react-bootstrap\";\nimport MyModal from \"./MyModal\";\n\nconst Header = () => {\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand>React-Tetris</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                </Nav>\n                <Form inline>\n                    <MyModal/>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header","import React from 'react'\nimport \"./Footer.css\"\nimport {MDBCol, MDBContainer, MDBRow, MDBFooter} from \"mdbreact\";\n\nconst Footer = () => {\n    return (\n        <div className=\"flex-container\">\n\n            <div>\n                <a href=\"https://rs.school/js/\">\n                    <img className=\"resize\" src=\"https://rs.school/images/rs_school_js.svg\" alt=\"rs school\"/>\n                </a>\n            </div>\n\n            <div>\n                <a href=\"https://github.com/Danila-cmd\">GitHub</a>\n            </div>\n\n            <div>\n                &copy; {new Date().getFullYear()}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Footer\n","import React from \"react\";\nimport Tetris from './componentsForGame/Tetris'\nimport \"./index.css\"\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Game = () => {\n    return (\n        <div>\n            <Header/>\n            <Tetris/>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Game;","export default __webpack_public_path__ + \"static/media/bum.0bd8a468.mp3\";","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport \"./mainMenu-style.css\"\n\nimport useSound from \"use-sound\";\nimport sound from \"./Sound/bum.mp3\"\n\n\nconst MainMenu = () => {\n\n    const gamer = localStorage.getItem('gamer');\n\n    const [play] = useSound(sound)\n\n    return (\n        <div id=\"gameMenu\">\n            {gamer === null ? (\n                <div>\n                    <div className=\"buttonToPlay\">\n                        <Link to=\"/game\" className=\"btn btn-primary disabled\" disabled>ИГРАТЬ</Link>\n                    </div>\n                    <div className=\"buttonToPlay\">\n                        <Link to=\"/createGamer\"\n                              className=\"btn btn-dark\"\n                              onClick={play}\n                        >СОЗДАТЬ ИГРОКА</Link>\n                    </div>\n                </div>\n            ) : (\n                <div id=\"gameMenu\">\n                    <div className=\"buttonToPlay\">\n                        <Link to=\"/game\"\n                              className=\"btn btn-primary\"\n                              onClick={play}\n                        >ИГРАТЬ</Link>\n                    </div>\n                    <div className=\"buttonToPlay\">\n                        <Link to=\"/createGamer\" className=\"btn btn-dark disabled\">СОЗДАТЬ ИГРОКА</Link>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default MainMenu","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\n\nconst App = () => {\n\n    const routes = useRoutes(true)\n\n    return (\n        <Router>\n            <div>\n                {routes}\n            </div>\n        </Router>\n    )\n\n}\n\nexport default App\n\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport CreateGamer from \"./components/CreateGamer\";\nimport Game from \"./components/Game/Game\";\nimport MainMenu from \"./components/MainMenu\";\n\nexport const useRoutes = () => {\n    return (\n        <Switch>\n            <Route path=\"/game\" exact>\n                <Game/>\n            </Route>\n\n            <Route path=\"/\" exact>\n                <MainMenu/>\n            </Route>\n\n            <Route path=\"/createGamer\" exact>\n                <CreateGamer/>\n            </Route>\n\n        </Switch>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n    <App/>\n    , document.getElementById('root'))"],"sourceRoot":""}